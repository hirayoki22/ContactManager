.container {
  max-width: 700px;
}

button mat-icon {
  color: #888;
  font-size: 1.35rem;
}

#load-icon {
  position: relative;
  width: fit-content;
  height: auto;
  margin: 10rem auto 0;
  user-select: none;
  animation: appear 0.6s ease-in-out;
  text-align: center;
}

#load-icon ::ng-deep .mat-progress-spinner circle, .mat-spinner circle {
  stroke: #658bff;
}

#no-contacts-mgs {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: fit-content;
  margin: 12rem auto 0;
  color: #555;
  user-select: none;
}

#no-contacts-mgs h2, button {
  margin: 0;
}

#no-contacts-mgs button {
  margin-top: 1rem;
}


/* Contact Cards Styling */
#contacts-container {
  animation: reveal 0.4s ease-in-out;
}

#title {
  margin-bottom: 2rem;
}

mat-paginator {
  margin-bottom: 1rem;
  background-color: transparent;
}

mat-card {
  position: relative;
  padding: 1.2rem 2rem;
  box-shadow: 0 1px 3px rgba(160, 160, 160, 0.5) !important;
  overflow: hidden;
}

mat-card:not(:last-child) {
  margin-bottom: 1rem;
}

mat-card-header 
mat-card-title {
  color: #1e87f0;
  font-size: 1.1rem;
}

mat-card-header 
mat-card-subtitle {
  text-transform: lowercase;
}

mat-card-header 
mat-card-subtitle::before {
  content: '@';
}

.contact-avatar {
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  font-size: 1.1rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 1px;
  background-color: #ff1d1d;
  user-select: none;
}

mat-card-content {
  margin-top: 1rem;
}

#contact-email {
  margin-bottom: 0.5rem;
}

#contact-email,
#contact-phone {
  display: flex;
  align-items: center;
  color: #444;
  font-weight: 500;
}

#contact-email mat-icon,
#contact-phone mat-icon {
  margin-right: 0.7rem;
  color: #888;
}

#contact-email span,
#contact-phone span {
  color: #555;
  font-weight: 400;
  text-transform: lowercase;
}


mat-card button {
  width: fit-content;
  height: 0 !important;
  color: #888;
}

.contact-options {
  position: absolute !important;
  top: 0.5rem;
  right: 1rem;
}


/*** Contact New and Delete State ***/
@keyframes addedContact {
  from {
    opacity: 0.75;
  }
  to {
    opacity: 1;
  }
}

.isNew {
  animation: addedContact 2s ease;
}

.onDelete {
  box-shadow: none !important;
  user-select: none;
  cursor: wait;
}

.onDelete::after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.5);
}